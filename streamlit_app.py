import streamlit as st
from datetime import datetime, timedelta
from caching import *
from data_processing_main_req import process_orders_data
from excel_utils import save_data_to_excel

st.set_page_config(page_title="–†–∞—Å—Å—á–µ—Ç PNL", page_icon="üìà")
st.title("–†–∞—Å—Å—á–µ—Ç PNL")
st.header('–§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–∞–º')

api_key = st.secrets["api_key"]
google_sheets_creds = st.secrets["gcp_service_account"]

# –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å–ø—Ä–∞–≤–æ—á–Ω—ñ–∫–∞ –≥—É–≥–ª—à–∏—Ç
spreadsheet_id_offers = '15GvP6wElztDSQKqk5kxnB37dKxKi3nTyEsTbBF1vqW4'
combined_df = fetch_offers_data(spreadsheet_id_offers, dict(google_sheets_creds))
# –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤–∏–ø–ª–∞—Ç
sheet_name_payment = '–í—ã–ø–ª–∞—Ç–∞ (new) –∫–æ–ø–∏—è'
df_payment, df_appruv_range,df_buyers_name = fetch_payment_data(spreadsheet_id_offers, sheet_name_payment, dict(google_sheets_creds))


current_date = datetime.now()
first_day_of_month = current_date.replace(day=1)

start_date = st.date_input('–ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞', value=first_day_of_month)
end_date = st.date_input('–ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞', value=current_date)

if end_date < start_date:
    st.error('–ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–Ω—å—à–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã')

start_date_str = start_date.strftime('%Y-%m-%d')
end_date_str = end_date.strftime('%Y-%m-%d')

# –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤ –∑ –≥—É–≥–ª—à–∏—Ç
spreadsheet_id_tokens = '1Q8eFscYd9dsl6QTzLiRQqKXMg3HFuZgwjd9kg0fOMdQ'
sheet_name_tokens = '–õ–∏—Å—Ç1'
df_tokens = fetch_tokens_data(spreadsheet_id_tokens, sheet_name_tokens, dict(google_sheets_creds))

# print(df_tokens)

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∏–≥—Ä—É–∑–∫–∏ —Ç–∞ –æ–±—Ä–æ–±–∫–∏ –¥–∞–Ω–∏—Ö
if st.button("–í—ã–≥—Ä—É–∑–∏—Ç—å –∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ"):
    progress_bar = st.progress(0)

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ –§–ë
    df_grouped = cached_fetch_facebook_data(df_tokens, start_date_str, end_date_str)
    st.session_state['df_grouped'] = df_grouped
    progress_bar.progress(15)

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å –∑ CRM
    request_type = 'main'
    df_orders = fetch_orders_data(api_key, start_date_str, end_date_str, request_type)
    progress_bar.progress(80)
    # st.write(df_grouped)
    

    # –û–±—Ä–æ–±–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω—å
    processed_orders,df = process_orders_data(df_orders, combined_df, df_payment, df_appruv_range, df_grouped)
    progress_bar.progress(95)
    
    st.session_state.update({
        'processed_orders': processed_orders,
    #     'spend_wo_leads': spend_wo_leads,
    #     'df_orders': df_orders,
    #     'df': df
    })
    st.write(df)


    # # –û–±—Ä–æ–±–∫–∞ –∫–∞—Ç–∞–ª–æ–≥—É
    # catalog_w_leads, catalog_cash = process_catalog(df, df_payment, df_grouped, combined_df, b, df_appruv_range=df_appruv_range, cash=2)
    # car_space_merged = process_carspace(df, df_payment, df_grouped, combined_df, b, df_appruv_range=df_appruv_range, cash=1)

    # st.session_state.update({
    #     'car_space_merged': car_space_merged,
    #     'catalog_w_leads': catalog_w_leads,
    #     'catalog_cash': catalog_cash
    # })
    # progress_bar.progress(80)


    # st.write(processed_orders)

    # filename = save_data_to_excel(
    #     processed_orders, 
    #     start_date_str, 
    #     end_date_str
    # )
    
    # with open(filename, "rb") as f:
    #     st.download_button(
    #         "–°–∫–∞—á–∞—Ç—å Excel —Ñ–∞–π–ª",
    #         f,
    #         file_name=filename,
    #         mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    #     )